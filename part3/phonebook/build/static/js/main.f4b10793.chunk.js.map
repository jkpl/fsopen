{"version":3,"sources":["services/phonebook.js","components/app.js","index.js"],"names":["baseUrl","service","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","deleteById","delete","Notification","notification","message","cssClassName","status","className","Filter","value","setValue","onChange","event","target","PersonForm","submit","nameValue","setName","numberValue","setNumber","onSubmit","preventDefault","name","number","type","Person","person","onDelete","onClick","window","confirm","Persons","persons","map","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","nameFilter","setFilter","setNotification","displayedPersons","filter","toLowerCase","includes","removePersonFromViewById","idToDelete","nextPersons","displayNotification","setTimeout","useEffect","phonebook","newPerson","duplicate","find","confirmText","updatedPerson","concat","catch","err","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4b10793.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nfunction getAll() {\n  return axios\n    .get(baseUrl)\n    .then((response) => response.data);\n}\n\nfunction create(newObject) {\n  return axios\n    .post(baseUrl, newObject)\n    .then((response) => response.data);\n}\n\nfunction update(id, newObject) {\n  return axios\n    .put(`${baseUrl}/${id}`, newObject)\n    .then((response) => response.data);\n}\n\nfunction deleteById(id) {\n    return axios\n      .delete(`${baseUrl}/${id}`);\n}\n\nconst service = { getAll, create, update, deleteById }\n\nexport default service;\n","import React, { useState, useEffect } from 'react';\nimport phonebook from '../services/phonebook';\n\nconst Notification = ({notification}) => {\n  if (!notification || !notification.message) {\n    return <></>;\n  }\n  const cssClassName = `notification notification-${notification.status}`;\n  return (\n    <div className={cssClassName}>\n      {notification.message}\n    </div>\n  );\n};\n\nconst Filter = ({value, setValue}) => {\n  function handleNameFilterChange(event) {\n    setValue(event.target.value);\n  }\n  return (\n    <div>\n      filter shown with <input value={value} onChange={handleNameFilterChange} />\n    </div>\n  );\n};\n\nconst PersonForm = ({submit, nameValue, setName, numberValue, setNumber}) => {\n  function onSubmit(event) {\n    event.preventDefault();\n    submit({\n      name: nameValue,\n      number: numberValue,\n    });\n  }\n\n  function handleNameChange(event) {\n    setName(event.target.value);\n  }\n\n  function handleNumberChange(event) {\n    setNumber(event.target.value);\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        name: <input value={nameValue} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={numberValue} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nconst Person = ({person, onDelete}) => {\n  function deleteAction() {\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      onDelete(person);\n    }\n  }\n\n  return (\n    <div>\n      {person.name} {person.number} <button onClick={deleteAction}>delete</button>\n    </div>\n  );\n};\n\nconst Persons = ({persons, onDelete}) => {\n  return persons.map(\n    (person) => <Person key={person.id} person={person} onDelete={onDelete} />\n  );\n};\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]);\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ nameFilter, setFilter ] = useState('');\n  const [ notification, setNotification ] = useState({});\n\n  const displayedPersons = nameFilter === ''\n    ? persons\n    : persons.filter(\n      ({name}) => name.toLowerCase().includes(nameFilter.toLowerCase())\n    );\n\n  function fetchPersons() {\n    phonebook.getAll().then(setPersons);\n  }\n  useEffect(fetchPersons, []);\n\n  function addPhonebookEntry(newPerson) {\n    const duplicate = persons.find(({name}) => name === newPerson.name);\n\n    if (duplicate) {\n      const confirmText = `${newPerson.name} is already added to phonebook, replace the old number with a new one?`;\n      if (window.confirm(confirmText)) {\n        phonebook\n          .update(duplicate.id, newPerson)\n          .then((updatedPerson) => {\n            const nextPersons = persons.map(\n              (person) => person.id === updatedPerson.id ? updatedPerson : person\n            );\n            setPersons(nextPersons);\n            displayNotification({\n              message: `Updated ${updatedPerson.name}`,\n              status: 'ok',\n            })\n          });\n      }\n    } else {\n      phonebook\n        .create(newPerson)\n        .then((person) => {\n          setPersons(persons.concat(person))\n          displayNotification({\n            message: `Added ${person.name}`,\n            status: 'ok',\n          })\n        });\n    }\n  }\n\n\n  function removePersonFromViewById(idToDelete) {\n    const nextPersons = persons.filter(({id}) => id !== idToDelete);\n    setPersons(nextPersons);\n  }\n\n  function deletePerson(person) {\n    phonebook\n      .deleteById(person.id)\n      .then(() => {\n        removePersonFromViewById(person.id);\n        displayNotification({\n          message: `Deleted ${person.name}`,\n          status: 'ok',\n        })\n      })\n      .catch((err) => {\n        if (err.response && err.response.status === 404) {\n          removePersonFromViewById(person.id);\n          displayNotification({\n            message: `Information of ${person.name} has already been removed from server`,\n            status: 'fail',\n          })\n          return;\n        }\n        return err;\n      });\n  }\n\n  function displayNotification(notification) {\n    setNotification(notification);\n    setTimeout(() => {\n      setNotification({});\n    }, 5000);\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter value={nameFilter} setValue={setFilter} />\n      <h3>Add a new</h3>\n      <PersonForm\n        submit={addPhonebookEntry}\n        nameValue={newName}\n        setName={setNewName}\n        numberValue={newNumber}\n        setNumber={setNewNumber}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={displayedPersons} onDelete={deletePerson} />\n    </div>\n  );\n}\n\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './components/app';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}